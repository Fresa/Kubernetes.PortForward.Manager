@page "/contexts/{Context}"
@using Port.Shared
@inject HttpClient Http

<h1>Port forwards</h1>

<p>Configured port forwards.</p>

@if (_pods == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <h2>Deployments</h2>
    <table class="table">
        <thead>
        <tr>
            <th>@nameof(Deployment.Namespace)</th>
            <th>@nameof(Deployment.Name)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var deployment in _deployments)
        {
            <tr>
                <td>@deployment.Namespace</td>
                <td>@deployment.Name</td>
            </tr>
        }
        </tbody>
    </table>

    <h2>Pods</h2>
    <table class="table">
        <thead>
        <tr>
            <th>@nameof(Pod.Namespace)</th>
            <th>@nameof(Pod.Name)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var pod in _pods)
        {
            <tr>
                <td>@pod.Namespace</td>
                <td>@pod.Name</td>
            </tr>
        }
        </tbody>
    </table>

    <h2>Services</h2>
    <table class="table">
        <thead>
            <tr>
                <th>@nameof(Service.Namespace)</th>
                <th>@nameof(Service.Name)</th>
                <th>Container port</th>
                <th>Protocol type</th>
                <th>Host port</th>
                <th>Enable / Disable</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var service in _portForwardedServices)
        {
            var firstRow = true;
            @foreach (var portForward in service)
            {
                <tr>
                    <td class="@(firstRow ? "" : "no-borders")">@(firstRow ? portForward.Namespace : "")</td>
                    <td class="@(firstRow ? "" : "no-borders")">@(firstRow ? portForward.Name : "")</td>
                    <td>@portForward.PodPort</td>
                    <td>@portForward.ProtocolType</td>
                    <td>
                        <MatTextField TValue="int?" @bind-Value="@portForward.LocalPort"/>
                    </td>
                    <td>
                        <MatSlideToggle TValue="bool" ValueChanged="@(enable => ChangePortForwardAsync(portForward, enable))"/>
                    </td>
                </tr>
                firstRow = false;
            }
        }
        </tbody>
    </table>
}

@code
{
    private Deployment[] _deployments;
    private Pod[] _pods;

    private List<IGrouping<string, global::Port.Shared.PortForward>> _portForwardedServices;

    [Parameter]
    public string Context { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _deployments = await Http.GetFromJsonAsync<Deployment[]>($"Deployment/{Context}");
        _pods = await Http.GetFromJsonAsync<Pod[]>($"Pod/{Context}");

        _portForwardedServices = (await Http.GetFromJsonAsync<Service[]>($"Service/{Context}"))
            .SelectMany(service =>
                service.Ports
                    .Select(port =>
                        new global::Port.Shared.PortForward
                        (
                            @namespace: service.Namespace,
                            name: service.Name,
                            protocolType: port.ProtocolType,
                            podPort: port.Number
                        )))
            .GroupBy(forward => $"{forward.Namespace}/{forward.Name}")
            .ToList();
    }

    protected override async Task OnParametersSetAsync()
    {
        await OnInitializedAsync();
    }

    private async Task ChangePortForwardAsync(
        global::Port.Shared.PortForward portForward,
        bool enable)
    {
        if (enable)
        {
            await Http.PostAsJsonAsync($"Service/{Context}/portforward", portForward);
        }
    }
}